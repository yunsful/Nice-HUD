################
#[양식] 아래에 맞춰서 작성해주시면 됩니다.
#실제 commit 하실 때 주석처리하면 인식을 못하니 유의하세요.
#feat: Add login function

#- Implement user authentication
#- Add login form with username and password fields
#- Integrate backend API for login requests
#- Handle authentication errors and display messages

#Closes #45
################
#이 아래는 양식 관련 설명입니다.
################
#[구조]
#<type>(<scope>): <subject>          -- 헤더
#<BLANK LINE>
#<body>                              -- 본문
#<BLANK LINE>
#<footer>                            -- 바닥글
################
#[type]
#feat : 새로운 기능 추가, 기존의 기능을 요구 사항에 맞추어 수정
#fix : 기능에 대한 버그 수정
#build : 빌드 관련 수정
#chore : 패키지 매니저 수정, 그 외 기타 수정 ex) .gitignore
#ci : CI 관련 설정 수정
#docs : 문서(주석) 수정
#style : 코드 스타일, 포맷팅에 대한 수정
#refactor : 기능의 변화가 아닌 코드 리팩터링 ex) 변수 이름 변경
#test : 테스트 코드 추가/수정
#release : 버전 릴리즈
################
# <타입> : <제목> 의 형식으로 제목을 아래 공백줄에 작성
# 제목은 50자 이내 / 변경사항이 "무엇"인지 명확히 작성(본문 내용이 담기는) / 끝에 마침표 금지
# 예) feat: Add login function
# 제목 작성 후 바로 아래 공백을 만들어야 합니다. (제목과 본문의 분리를 위함)
feat: Add login function

################
# 본문(구체적인 내용)을 아랫줄에 작성
# 여러 줄의 메시지를 작성할 땐 "-"로 구분 (한 줄은 72자 이내)
# 본문 작성 후 바로 아래 공백을 만들어야 합니다. (본문과 꼬릿말의 분리를 위함)
- Implement user authentication
- Add login form with username and password fields
- Integrate backend API for login requests
- Handle authentication errors and display messages

################
# 꼬릿말(footer)을 아랫줄에 작성 (현재 커밋과 관련된 이슈 번호 추가 등, 옵션)
#closes : 이슈나 작업을 종료한다는 의미로 특정 작업(기능 구현, 전체적인 작업 완료)이 완료된 경우 사용.
#          더이상 작업이 필요할 필요가 없음을 알림.
#fixes : 특정 버그나 문제를 수정했을 때 사용.
#resolves : 일반적인 문제나 이슈를 해결. 기능 추가나 개선 작업이 완료된 경우 사용.
# 예) Close #45(45번 이슈인 로그인 구현을 했으니 해당 이슈[작업]을 종료)
Closes #45
################